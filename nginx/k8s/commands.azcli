kubectl version
minikube ip
minikube addons enable ingress
minikube addons enable ingress-dns


###################################### for nginx-deployment-pods.yml & Job
# Image URL: https://hub.docker.com/_/nginx?tab=tags
cd nginx/k8s

# 部署
kubectl apply -f nginx/k8s/nginx-deployment-pods.yml
kubectl apply -f nginx/k8s/nginx-deployment-pods-job.yml
kubectl apply -f nginx/k8s/nginx-deployment-pods-service.yml  # 部署 nginx-deployment-service
# 检查 ingress ready
kubectl get pods -n ingress-nginx
kubectl apply -f nginx/k8s/nginx-deployment-pods-service-ingress.yml
# 检查部署，500 时注意代理设置
curl nginx-deployment-pods-service.192.168.49.2.nip.io

##### PersistentVolumeClaim
kubectl apply -f nginx/k8s/nginx-deployment-pods-pvc.yml
kubectl apply -f nginx/k8s/nginx-deployment-pods-mount.yml  # 带持久卷部署
kubectl cp nginx/k8s/index.htm nginx-deployment-6b599bf9b7-595tc:/usr/share/nginx/html
##########

##### ConfigMap
kubectl apply -f nginx/k8s/nginx-deployment-config.yml  # ConfigMap
kubectl get configmaps
kubectl describe configmaps nginx-deployment-config 
kubectl apply -f nginx/k8s/nginx-deployment-pods-mount+config.yml  # 带持久卷 + ConfigMap 部署
kubectl get pod -l app=nginx-deployment-pods -o wide
curl nginx-deployment-pods-service.192.168.49.2.nip.io/404

kubectl delete configmaps nginx-deployment-config
##########


# 回滚
kubectl rollout undo deployment nginx-deployment

# 删除
kubectl delete -f nginx-deployment-pods.yml
kubectl delete deployments.apps nginx-deployment
kubectl delete -f nginx-deployment-pods-job.yml
kubectl delete -f nginx-deployment-pods-service.yml
kubectl delete -f nginx/k8s/nginx-deployment-pods-service-ingress.yml

# 巡查
kubectl get nodes -o wide
kubectl get services -o wide
kubectl get service nginx-deployment-pods-service -o wide
minikube service nginx-deployment-service --url # 查询 NodePort 可访问的 URL
kubectl get deployments -o wide
kubectl get replicasets -o wide   
kubectl get jobs -o wide
kubectl get pods -o wide
kubectl get pods -o wide --show-labels
kubectl get pod -l app=nginx-deployment-pods -o wide
kubectl get pod -l app=nginx-deployment-pods-job -o wide
kubectl get pvc -o wide

kubectl get deployments.apps nginx-deployment -o wide 
kubectl get deployments nginx-deployment -o yaml  

kubectl logs curl-fsvlg
kubectl logs -l app=curl

# 参考
kubectl explain deployment.spec  
kubectl explain job.metadata
kubectl explain job.spec
kubectl explain service.spec

###############################################################################

kubectl apply -f nginx-volume-claim.yml
kubectl delete -f nginx-volume-claim.yml
kubectl get persistentvolumeclaims
kubectl get pvc

kubectl get pv
kubectl patch pv <your-pv-name> -p '{"spec":{"persistentVolumeReclaimPolicy":"Retain"}}'

# dashboard
# 准备默认依赖账号
kubectl create serviceaccount kube-system:kubernetes-dashboard
kubectl create sa -n kube-system
kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard
kubectl get secrets -n kube-system | grep kubernetes-dashboard
kubectl describe secret kubernetes-dashboard-token- -n kube-system


az aks enable-addons -g $RESOURCE_GROUP -n -a kube-dashboard
az aks browse -g $RESOURCE_GROUP -n -a kube-dashboard



